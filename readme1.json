{"type":"Document","children":[{"type":"Heading","level":0,"useIndex":true,"content":[{"type":"Text","value":"Minditor 是什么"}]},{"type":"Paragraph","id":6,"content":[{"type":"Text","value":"Minditor 是一个既注重最终用户编辑体验，又注重开发者体验的块级富文本编辑器。它有以下特点："}]},{"type":"ULItem","level":0,"content":[{"type":"Text","value":"已经提供了例如图片上传、markdown 命令等重要的组件和 Plugin，并将由官方持续完善，目标默认就提供达到专业编辑工具的用户体验。"}]},{"level":0,"type":"ULItem","content":[{"type":"Text","value":"支持 InlineBlock，可在行内插入。"}]},{"level":0,"type":"ULItem","content":[{"type":"Text","value":"可以用任何框架的组件来实现编辑器的 Block/InlineBlock。"}]},{"level":0,"type":"ULItem","content":[{"type":"Text","value":"除了常见的事件和 API 外， Plugin 系统还为开发者默认提供一系列重要的 reactive state，让开发 Plugin 变得无比简单。"}]},{"type":"Paragraph","content":[{"type":"Text","value":"现在这篇文档就是用 Minditor 编写和渲染的，你可以在这个页面上快速体验 Minditor 的功能。Have fun!。"}]},{"type":"Heading","level":0,"useIndex":true,"content":[{"type":"Text","value":"编辑功能"}]},{"type":"Heading","useIndex":true,"level":1,"content":[{"type":"Text","value":"复制、粘贴、剪切、撤回、重做"}]},{"type":"Paragraph","content":[{"type":"Text","value":""},{"type":"Text","value":""},{"type":"Text","value":"默认支持右键菜单和快捷键进行复制、粘贴、剪切、撤回、重做。"}]},{"type":"Heading","level":1,"useIndex":true,"content":[{"type":"Text","value":"markdown commands"}]},{"type":"Paragraph","content":[{"type":"Text","value":"Minditor 默认提供了以下命令来实现快速编辑："}]},{"type":"ULItem","level":0,"content":[{"type":"Text","value":"输入 "},{"type":"InlineCode","value":"#+空格"},{"type":"Text","value":" 来插入 Heading。# 的数量决定了 Heading 的层级"}]},{"level":1,"type":"ULItem","content":[{"type":"Text","value":"  输入 "},{"type":"InlineCode","value":"1. + 空格"},{"type":"Text","value":"来在 Heading 中插入自动序号。"}]},{"level":0,"type":"ULItem","content":[{"type":"Text","value":"在段首输入 "},{"type":"InlineCode","value":"-+空格"},{"type":"Text","value":" 插入无序列表。"}]},{"level":0,"type":"ULItem","content":[{"type":"Text","value":"在段首落输入 1.+空格插入有序列表。"}]},{"level":0,"type":"ULItem","content":[{"type":"Text","value":"输入 "},{"type":"InlineCode","value":"+加任意文字+"},{"type":"Text","value":" 插入 Inline Code。"}]},{"level":0,"type":"ULItem","content":[{"type":"Text","value":"在段首输入 "},{"type":"InlineCode","value":"+语言+ 空格"},{"type":"Text","value":" 插入代码编辑器。"}]},{"type":"Heading","level":1,"useIndex":true,"content":[{"type":"Text","value":"Range Tool Plugin"}]},{"type":"Paragraph","content":[{"type":"Text","value":"输入 "},{"type":"InlineCode","value":"/"},{"type":"Text","value":" 会出现下拉框，提供可插入的组件。如果在空行头部输入 "},{"type":"InlineCode","value":"/"},{"type":"Text","value":"，会同时出现可插入的 Block 和 InlineBlock。"}]},{"type":"Heading","level":1,"useIndex":true,"content":[{"type":"Text","value":"Block Tool Plugin"}]},{"type":"Paragraph","content":[{"type":"Text","value":"鼠标移动到任意 Block，左侧会出现悬浮工具，默认提供删除、复制、黏贴和可插入 Block 等工具。"}]},{"type":"Heading","level":1,"useIndex":true,"content":[{"type":"Text","value":"Image Block"}]},{"type":"Paragraph","content":[{"type":"Text","value":"Minditor 提供了默认提供 InlineImageBlock 作为 Image 组件，它会将用户要上传的图片使用 base64 编码后直接保存在文档数据里。如果你需要单独上传图片到指定定制，也可以使用 createImageBlock 方法来创建新的 block 类型。createImageBlock 的使用例子："}]},{"type":"Heading","level":1,"useIndex":true,"content":[{"type":"Text","value":"Grid Block"}]},{"type":"Paragraph","content":[{"type":"Text","value":"Grid 组件的 Cell 中支持所有的文档能力，相当于一个内嵌的小文档。\n可以通过左侧的 Block Tool 在空段落处插入 Grid。也可以在段首输入 "},{"type":"InlineCode","value":"/"},{"type":"Text","value":" 后 Insert Suggestion Plugin 中获得。"}]},{"type":"Heading","level":1,"useIndex":true,"content":[{"type":"Text","value":"Code Block"}]},{"type":"Paragraph","content":[{"type":"Text","value":"Minditor 使用了 CodeMirror 6 作为 Code 组件。默认支持以下语言:"}]},{"type":"ULItem","level":0,"content":[{"type":"Text","value":"javascript (alias js/jsx)"}]},{"level":0,"type":"ULItem","content":[{"type":"Text","value":"typescript (alias ts/tsx)"}]},{"level":0,"type":"ULItem","content":[{"type":"Text","value":"python"}]},{"level":0,"type":"ULItem","content":[{"type":"Text","value":"php"}]},{"level":0,"type":"ULItem","content":[{"type":"Text","value":"cpp"}]},{"level":0,"type":"ULItem","content":[{"type":"Text","value":"java"}]},{"level":0,"type":"ULItem","content":[{"type":"Text","value":"sql"}]},{"level":0,"type":"ULItem","content":[{"type":"Text","value":"json"}]},{"level":0,"type":"ULItem","content":[{"type":"Text","value":"rust"}]},{"level":0,"type":"ULItem","content":[{"type":"Text","value":"css"}]},{"level":0,"type":"ULItem","content":[{"type":"Text","value":"html"}]},{"level":0,"type":"ULItem","content":[{"type":"Text","value":"sass"}]},{"level":0,"type":"ULItem","content":[{"type":"Text","value":"less"}]},{"level":0,"type":"ULItem","content":[{"type":"Text","value":"xml"}]},{"level":0,"type":"ULItem","content":[{"type":"Text","value":"yalml"}]},{"type":"Paragraph","content":[{"type":"Text","value":"你可以通过在段首输入 "},{"type":"InlineCode","value":"+语言+空格"},{"type":"Text","value":" 来插入指定语言的 Code Block。也可以通过 Block Tool 或者 Suggession Tool 插入。"}]},{"type":"Heading","level":0,"useIndex":true,"content":[{"type":"Text","value":"开发"}]},{"type":"Heading","level":1,"useIndex":true,"content":[{"type":"Text","value":"安装与初始化"}]},{"type":"Code","value":"npm i minditor","language":"js"},{"type":"Paragraph","content":[{"type":"Text","value":"Minditor 本身的可以渲染在任意的 dom 节点中。对外没有任何的布局、样式等要求.\n如果你只是用来渲染最简单的文字。可以直接使用下面的方式来渲染："}]},{"type":"Paragraph","content":[{"type":"Text","value":""}]},{"type":"Paragraph","content":[{"type":"Text","value":"对于需要完整 Plugin，希望视图匡高自动适应外部 container 的场景，我们推荐使用 scaffold 来创建视图："}]},{"type":"Heading","level":1,"useIndex":true,"content":[{"type":"Text","value":"开发 InlineBlock"}]},{"type":"Paragraph","content":[{"type":"Text","value":"InlineBlock 可以嵌入到行内，开发一个 InlineBlock 非常简单，示例如下："}]},{"type":"Paragraph","content":[{"type":"Text","value":""}]},{"type":"Paragraph","content":[{"type":"Text","value":"通常有了 InlineBlock 之后，我们还需要为用户提供使用 InlineBlock 的方法。有三种方式："}]},{"type":"ULItem","level":0,"content":[{"type":"Text","value":"在 Minditor 的 SuggestionTool 中出一个 Widget，当用户输入 / 时将展开下拉框看见这个 Block，并能点击使用。"}]},{"level":0,"type":"ULItem","content":[{"type":"Text","value":"实现一个 Plugin，监听用户的特殊输入，当输入满足条件时插入 InlineBlock。类似于 markdown。"}]},{"type":"Paragraph","content":[{"type":"Text","value":"我们在这里以创建链接的 Widget 为例来看如何创建一个 Range Tool 的 Widget："}]},{"type":"Paragraph","content":[{"type":"Text","value":""}]},{"type":"Heading","level":1,"useIndex":true,"content":[{"type":"Text","value":"开发  Block"}]},{"type":"Paragraph","content":[{"type":"Text","value":"开发一个 Block Comopnent 的方式与 Inline Component 基本相同。只是最后在提供给用户使用时，我们是将其注册到 BlockTool 或 Insert Suggession Tool 中供用户使用。注意 BlockTool 中的 Widget 和 Insert Suggession Tool 的  Widget 是通用的。我们这里以插入 Code 的 Widget 为例，演示如何创建 Widget："}]},{"type":"Paragraph","content":[{"type":"Text","value":""}]},{"type":"Heading","level":2,"useIndex":true,"content":[{"type":"Text","value":"使用其他框架来开发 Block（React 示例）"}]},{"type":"Paragraph","content":[{"type":"Text","value":"我们以一个 Calendar 组件来演示如何使用其他框架来开发 Block."}]},{"type":"Heading","level":1,"useIndex":true,"content":[{"type":"Text","value":"开发 Plugin"}]},{"type":"Paragraph","content":[{"type":"Text","value":"Minditor 中的 Plugin 拥有对整个 document 进行控制的能力，能实现几乎任何需求。它能实现根据用户的输入执行一次性的命令，也可以有自己的独立界面来支持更复杂的操作。"}]},{"type":"Heading","level":2,"useIndex":true,"content":[{"type":"Text","value":"执行一次性命令"}]},{"type":"Paragraph","content":[{"type":"Text","value":"我们以 markdown 中添加 Heading 的能力为例来看如何开发 Plugin。"}]},{"type":"Heading","level":2,"useIndex":true,"content":[{"type":"Text","value":"渲染界面"}]},{"type":"Paragraph","content":[{"type":"Text","value":"我们以 Range Tool 为例，来看如何使用  Plugin 提供的 reactive state 构建响应式界面。"}]},{"type":"Heading","level":2,"useIndex":true,"content":[{"type":"Text","value":"系统内置的 reactive state"}]},{"type":"Paragraph","content":[{"type":"Text","value":"系统默认提供的 Reactive State 如下："}]},{"type":"Heading","level":0,"useIndex":true,"content":[{"type":"Text","value":"Roadmap"}]},{"type":"Heading","level":1,"useIndex":true,"content":[{"type":"Text","value":"AutoComplete Plugin"}]},{"type":"Paragraph","content":[{"type":"Text","value":"根据用户的上下文来支持自动补全，为接入 AI Copilot 提供基础。"}]},{"type":"Heading","level":1,"useIndex":true,"content":[{"type":"Text","value":"File Upload Block"}]},{"type":"Paragraph","content":[{"type":"Text","value":"更多的文件上传和预览类型。"}]},{"type":"Heading","level":1,"useIndex":true,"content":[{"type":"Text","value":"Data Table"}]},{"type":"Paragraph","content":[{"type":"Text","value":"支持可完整排序、筛选等功能的 Data Table。"}]},{"type":"Heading","level":1,"useIndex":true,"content":[{"type":"Text","value":"Block level collaborative editing"}]},{"type":"Paragraph","content":[{"type":"Text","value":"块级的协同编辑，支持块级锁和单独授权。"}]},{"type":"Heading","level":1,"useIndex":true,"content":[{"type":"Text","value":"More requests from community"}]},{"type":"Paragraph","content":[{"type":"Text","value":"我们欢迎用户提出更多 feature request。"}]},{"type":"Heading","level":0,"useIndex":true,"content":[{"type":"Text","value":"支持我们"}]},{"type":"Paragraph","content":[{"type":"Text","value":"Minditor 目前由 Zhenyu Hou 独立开发和维护。你的支持将用于雇佣开发者持续维护本项目和开发新的功能。Minditor 承诺所有支持支出均用于开发开源、免费、供社区所有人使用的功能。"}]},{"type":"Paragraph","content":[{"type":"Text","value":""}]}]}